{"version":3,"sources":["withRoot.tsx","actions/build.ts","actions/index.ts","actions/genericHttpAction.ts","actions/favourite.ts","components/BranchBuild.tsx","components/RouterListItem.tsx","components/Drawer.tsx","actions/filter.ts","components/Form/CategoryFilter.tsx","components/Form/TitleFilter.tsx","components/Form/LatestBranchFilter.tsx","components/Form/FormDialog.tsx","components/Form/BuildForm.tsx","components/Favourite.tsx","selectors/useFavourite.ts","components/ModuleCard.tsx","components/Build.tsx","components/ResultLoader.tsx","selectors/filterModuleByCategory.ts","selectors/latestBranchFilter.ts","selectors/useBuilds.ts","selectors/useSearching.ts","pages/HomePage.tsx","pages/StatsPage.tsx","selectors/useStats.ts","selectors/useCompares.ts","components/MergeupBranch.tsx","components/Mergeup.tsx","pages/ComparePage.tsx","actions/mergeups.ts","actions/unrelease.ts","Routes.tsx","App.tsx","reducers/createReducer.ts","reducers/Build/initalState.ts","reducers/Build/reducer.ts","reducers/filters.ts","reducers/compare.ts","reducers/mergeups.ts","reducers/unreleases.ts","reducers/favourites.ts","configureStore.tsx","reducers/index.ts","ReduxRoot.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","type","BuildActions","useActions","actions","deps","dispatch","useDispatch","useMemo","Array","isArray","map","a","bindActionCreators","genericHttpAction","url","loadingActionType","loadedActionType","fetch","process","method","then","response","json","data","lastModified","headers","has","get","undefined","payload","Actions","initBuildData","LOADING_BUILDS","BUILD_LOADED","currentFavs","favs","localStorage","getItem","split","initFavourite","INIT_FAV","toggleFavourite","fav","idx","indexOf","push","splice","setItem","join","console","dir","buildStateColours","failed","errored","passed","running","created","started","expired","canceled","variantByState","BranchBuild","module","branch","build","id","state","classes","useStyles","Button","href","variant","className","branchBtn","makeStyles","props","background","property","mapping","styledBy","margin","flexGrow","textDecoration","RouterListItem","Icon","route","title","history","useHistory","onClick","classnames","active","location","pathname","ListItem","button","ListItemIcon","ListItemText","states","legendStyles","legend","width","height","borderRadius","Drawer","useSelector","builds","ago","Math","round","Date","getTime","root","drawerHeader","Typography","Divider","List","HomeIcon","MergeTypeIcon","NewReleasesIcon","PieChartIcon","component","drawerSpacer","ListSubheader","key","mixins","toolbar","display","justifyContent","alignItems","drawerPaper","backgroundColor","default","breakpoints","up","position","minHeight","flexDirection","toggleFilter","TOGGLE_FILTER","toggleDialog","TOGGLE_DIALOG","clearFilters","CLEAR_FILTERS","setTerm","term","triggerSearchTimeout","setTimeout","TRIGGER_SEARCH","SET_TERM","setCategoryFilter","categoryFilters","SET_CATEGORY_FILTER","categories","core","supported","unsupported","nonmodule","CategoryFilter","ReduxActions","filters","FormControl","InputLabel","color","Select","labelId","multiple","value","onChange","event","target","input","Input","renderValue","selected","Object","keys","MenuItem","Checkbox","checked","spacing","maxWidth","TitleFilter","partialTerm","TextField","label","style","LatestBranchFilter","filter","FormControlLabel","control","Switch","FormDialog","dialogOpen","Dialog","open","onClose","fullWidth","aria-labelledby","DialogTitle","DialogContent","FormGroup","cat","DialogActions","BuildForm","useModal","useMediaQuery","down","row","IconButton","aria-label","Favourite","name","favourites","toggle","isFavourite","useFavourite","Ico","StarIcon","StarBorderIcon","preventDefault","fontSize","minWidth","ModuleCard","children","match","org","meta","ssData","find","repo","displayName","subheader","headerProps","avatar","Avatar","src","alt","substring","toUpperCase","action","header","Grid","item","xs","sm","md","lg","Card","box","CardHeader","CardContent","textAlign","text","modTitle","Build","branches","cardActions","flexWrap","NoResult","ResultLoader","loading","results","empty","length","CircularProgress","size","filterModuleByCategory","moduleName","moduleMetaDada","ssModuleData","includes","removeNulls","latestBranchFilter","mod","nextBranches","nextMajor","nextMinor","parseInt","reduce","b","max","toString","patches","RegExp","replace","trim","sort","slice","subVersion","nextPatch","previousPatch","values","statePriority","sortByState","stateGroups","moduleBranchFilter","branchStateReduce","accumulator","postProcess","stateSort","localeCompare","sortModule","useBuilds","modules","useSearching","HomePage","isSearching","favModules","otherModules","centerContainer","container","direction","justify","paddingTop","paddingLeft","paddingRight","marginBottom","marginTop","labels","buildData","stats","datasets","StatsPage","forEach","useStats","count","branchFilter","compares","branchKey","compare","aUpToDate","ahead_by","bUpToDate","useCompares","compareKey","compareList","MergeupBranch","head","base","upToDate","status","range","Mergeup","ComparePage","stateKey","initData","initAction","React","MergeupActions","UnreleaseActions","initMergeupData","LOADING","LOADED","initUnreleaseData","Routes","exact","path","overflow","Component","zIndex","appFrame","appBar","drawer","appForm","navIconHide","withRoot","buildActions","FavActions","mobileOpen","setMobileOpen","isMobile","basename","paper","ModalProps","keepMounted","AppBar","Toolbar","ThemeProvider","CssBaseline","createReducer","initialState","handlers","hasOwnProperty","markExpiredBuild","buildDate","started_at","now","expiry","setDate","getDate","clearTimeout","toLocaleLowerCase","compareReducer","loadingAction","loadedAction","mergeups","unreleases","persistConfig","version","storage","localforage","blacklist","middleware","createLogger","createBrowserHistory","applyMiddleware","thunk","persistedReducer","persistReducer","combineReducers","store","createStore","persistor","persistStore","configureStore","rootEl","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.9b951c02.chunk.js","sourcesContent":["import { CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport * as React from \"react\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: \"#e5e5e5\",\n\t\t\tmain: \"#727272\",\n\t\t\tdark: \"#363839\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: \"#005AE1\",\n\t\t\tmain: \"#0F3287\",\n\t\t\tdark: \"#051E2D\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t\ttype: 'dark'\n\t},\n});\n\nexport function withRoot(Component: any) {\n\tfunction WithRoot(props: object) {\n\t\t// MuiThemeProvider makes the theme available down the React tree\n\t\t// thanks to React context.\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t{/* Reboot kickstart an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Component {...props} />\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n\n\treturn WithRoot;\n}\n","import { BuildData } from \"../model\";\nimport { genericHttpAction, DataPayload, ActionType } from \"./genericHttpAction\";\n\nexport interface BuildDataPayload extends  DataPayload<BuildData> {};\n\nexport enum BuildActions {\n  LOADING_BUILDS = \"LOADING_BUILDS\",\n  BUILD_LOADED = \"BUILD_LOADED\",\n}\n\nexport type BuildAction =\n  | ActionType<typeof BuildActions.LOADING_BUILDS, void>\n  | ActionType<typeof BuildActions.BUILD_LOADED, BuildDataPayload>\n;\n\nexport const initBuildData = genericHttpAction(\n  'buildData',\n  BuildActions.LOADING_BUILDS,\n  BuildActions.BUILD_LOADED\n);\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { BuildAction } from \"./build\";\nimport { Action as FilterAction} from './filter';\nimport { Action as FavouriteAction} from './favourite';\n\nexport function useActions(actions: any, deps?: any): any {\n\tconst dispatch = useDispatch();\n\treturn useMemo(\n\t\t() => {\n\t\t\tif (Array.isArray(actions)) {\n\t\t\t\treturn actions.map(a => bindActionCreators(a, dispatch));\n\t\t\t}\n\t\t\treturn bindActionCreators(actions, dispatch);\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tdeps ? [dispatch, ...deps] : deps\n\t);\n}\n\nexport type Action =\n  | BuildAction\n  | FilterAction\n  | FavouriteAction\n;\n","import { CompareData } from \"../model\";\n\nexport interface DataPayload<T> {\n  json: T\n  lastModified: string\n}\n\nexport type ActionType<t,p> = {\n  type: t\n  payload: p\n}\n\ninterface reduxAction {\n\ttype: string,\n\tpayload?: any\n}\n\ntype dispatchCallback = (action: reduxAction) => void;\n\n/**\n * Generate a generic redux action to fetch a JSON file\n * @param url\n * @param loadingActionType\n * @param loadedActionType\n */\nexport function genericHttpAction(url: string, loadingActionType: string, loadedActionType: string) {\n  return () => (\n    (dispatch: dispatchCallback) => {\n      dispatch({type: loadingActionType});\n\n      fetch(process.env.PUBLIC_URL + `/${url}.json`, {method: 'GET'})\n        .then((response) => response.json().then((data) => ({\n        json: data,\n        lastModified: response.headers.has('last-modified') ?\n          response.headers.get('last-modified') as string :\n          undefined\n          })))\n        .then(data => dispatch({type: loadedActionType, payload: data}));\n\n    }\n  );\n}\n\n/**\n * Payload for MergeUp/unrelease\n */\nexport interface CompareDataPayload extends  DataPayload<CompareData> {};\n","import { ActionType } from \"../reducers/ActionTypes\";\n\nexport enum Actions {\n  INIT_FAV = \"INIT_FAV\"\n}\n\nexport type Action =\n  | ActionType<typeof Actions.INIT_FAV, string[]>\n;\n\nconst FAVOURITES = 'FAVOURITES';\n\nfunction currentFavs(): string[] {\n  const favs = localStorage.getItem(FAVOURITES);\n  return favs?.split(',') || [];\n}\n\nexport function initFavourite() {\n  return {type: Actions.INIT_FAV, payload: currentFavs()}\n}\n\nexport function toggleFavourite(fav: string) {\n  const favs = currentFavs();\n\n  const idx = favs.indexOf(fav);\n\n  if (idx === -1) {\n    favs.push(fav)\n  } else {\n    favs.splice(idx, 1);\n  }\n\n  localStorage.setItem(FAVOURITES, favs.join(','));\n\n  console.dir(favs)\n\n\treturn {type: Actions.INIT_FAV, payload: favs};\n}\n","import { makeStyles, Button } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport {BuildStateType} from \"../model/build\";\n\nexport const buildStateColours: { [state in BuildStateType]: string } = {\n\tfailed: \"#FE6B8B\",\n\terrored: \"#FE6B8B\",\n\tpassed: \"#61b047\",\n\trunning: \"#fede6b\",\n\tcreated: \"#fede6b\",\n\tstarted: \"#fede6b\",\n\texpired: \"#6b8bfe\",\n\tcanceled: \"#ad495e\",\n};\n\ninterface Props {\n\tmodule: string,\n\tbranch: string,\n\tbuild: {\n\t\tid: number,\n\t\tstate: string\n\t}\n}\n\nconst variantByState: any = {\n\terrored: 'contained',\n\tfailed: 'contained',\n\tpassed: 'outlined',\n\tcreated:  'contained',\n\tstarted:  'contained',\n\trunning:  'contained',\n}\n\nexport function BranchBuild({module, branch, build: {id, state}}: Props) {\n\tconst classes = useStyles({state});\n\treturn <Button\n\t\thref={`https://travis-ci.com/github/${module}/builds/${id}`}\n\t\tvariant={variantByState[state]}\nclassName={classes.branchBtn}>{branch}</Button>;\n}\n\nconst styledBy = (property: string, props: any, mapping: any): string =>\n\tmapping[props[property]];\n\nconst useStyles = makeStyles(({\n\tbranchBtn: props => {\n\t\tconst background = styledBy('state', props, buildStateColours)\n\t\treturn {\n\t\t\tmargin: '0 8px 8px 0',\n\t\t\tflexGrow: 1,\n\t\t\tbackground,\n\t\t\ttextDecoration: 'none',\n\t\t\t'&:hover': { background }\n\t\t}\n\t},\n}));\n","// prettier-ignore\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport classnames from \"classnames\";\n\n\ninterface Props {\n  Icon: React.ElementType,\n  route: string,\n  title: string\n}\n\nexport function RouterListItem({Icon, route, title}: Props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const props = {\n    onClick: () => history.push(route),\n    className: classnames({[classes.active]: history.location.pathname === route})\n  }\n\n\treturn (\n\t\t\t\t<ListItem button {...props}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Icon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary={title} />\n\t\t\t\t</ListItem>\n  )\n}\nconst useStyles = makeStyles((theme: Theme) => ({\n  active: {\n    background: theme.palette.secondary.main,\n    \"&:hover\": {\n      background: theme.palette.secondary.light\n    }\n  }\n}));\n","// prettier-ignore\nimport { Divider, List, ListItem, ListItemIcon, ListItemText, ListSubheader, Typography } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport PieChartIcon from '@material-ui/icons/PieChart';\nimport GitHub from \"@material-ui/icons/GitHub\";\nimport MergeTypeIcon from '@material-ui/icons/MergeType';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../reducers/index\";\nimport { BuildStateType } from \"../model\";\nimport { buildStateColours } from './BranchBuild';\nimport { RouterListItem } from \"./RouterListItem\";\n\nconst states: BuildStateType[] = [\n\t'failed',\n\t'canceled',\n\t'expired',\n\t'running',\n\t'passed'\n];\n\nconst styledBy = (property: string, props: any, mapping: any): string =>\n\tmapping[props[property]]\n\nconst legendStyles = makeStyles({\n\tlegend: props => ({\n\t\tbackground: styledBy('state', props, buildStateColours),\n\t\twidth: 24,\n\t\theight: 24,\n\t\tborderRadius: 3\n\t})\n});\n\nexport function Drawer(props: {  }) {\n\tconst classes = useStyles();\n  const lastModified = useSelector((state: RootState) => state.builds.lastModified);\n  const ago = lastModified ?\n\t    `Fetched ${Math.round(((new Date()).getTime() - new Date(lastModified).getTime()) / 1000 / 60)} min ago` :\n\t\t'';\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.drawerHeader}>\n        <Typography variant=\"h6\">CMS Squad Dashboard</Typography>\n      </div>\n\t\t\t<Divider />\n\t\t\t<List>\n        <RouterListItem route=\"/\" Icon={HomeIcon} title=\"Builds\" />\n\t\t\t\t<RouterListItem route=\"/mergeups\" Icon={MergeTypeIcon} title=\"Merge ups\" />\n        <RouterListItem route=\"/unreleases\" Icon={NewReleasesIcon} title=\"Unrelease\" />\n        <RouterListItem route=\"/stats\" Icon={PieChartIcon} title=\"Stats\" />\n\n\t\t\t\t<ListItem component=\"a\" button href=\"https://github.com/maxime-rainville/travis-dashboard/\">\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<GitHub />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"View Source\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem component=\"a\" button href=\"https://github.com/maxime-rainville/travis-dashboard/actions?query=workflow%3A%22Build+and+Deploy%22\">\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<UpdateIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Refresh data\" secondary={ago} />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t\t<div className={classes.drawerSpacer}></div>\n\t\t\t<List>\n\t\t\t\t<ListSubheader>Legend</ListSubheader>\n\t\t\t\t{\n\t\t\t\t\tstates.map(state => (\n\t\t\t\t\t\t<ListItem key={state}>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<span className={legendStyles({state}).legend}></span>\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={state} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</List>\n\t\t</div>\n\t);\n}\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdrawerHeader: {\n    ...theme.mixins.toolbar,\n    background: theme.palette.primary.main,\n    display: 'flex',\n\tjustifyContent: 'center',\n\talignItems: 'center'\n  },\n\tdrawerPaper: {\n\t\twidth: 250,\n\t\tbackgroundColor: theme.palette.background.default,\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\twidth: drawerWidth,\n\t\t\tposition: \"relative\",\n\t\t\theight: \"100%\",\n\t\t},\n\t},\n\troot: {\n\t\tminHeight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column'\n\t},\n\tdrawerSpacer: {\n\t\tflexGrow: 1\n\t},\n}));\n","import { ActionType } from \"../reducers/ActionTypes\";\nimport { CategoryFilterType } from \"../reducers/filters\";\n\nexport interface SetTermPayload {\n  term: string,\n  triggerSearchTimeout: NodeJS.Timeout\n}\n\nexport interface SetCatPayload {\n  categoryFilters: CategoryFilterType[]\n}\n\nexport enum Actions {\n  LOADING_BUILDS = \"LOADING_BUILDS\",\n  BUILD_LOADED = \"BUILD_LOADED\",\n  TOGGLE_FILTER = \"TOGGLE_FILTER\",\n  SET_TERM = \"SET_TERM\",\n  TRIGGER_SEARCH = \"TRIGGER_SEARCH\",\n  SET_CATEGORY_FILTER = \"SET_CATEGORY_FILTER\",\n  CLEAR_FILTERS = \"CLEAR_FILTERS\",\n  TOGGLE_DIALOG = \"TOGGLE_DIALOG\",\n}\n\nexport type Action =\n  | ActionType<typeof Actions.TOGGLE_FILTER, undefined>\n  | ActionType<typeof Actions.SET_TERM, SetTermPayload>\n  | ActionType<typeof Actions.TRIGGER_SEARCH, undefined>\n  | ActionType<typeof Actions.SET_CATEGORY_FILTER, SetCatPayload>\n  | ActionType<typeof Actions.TOGGLE_DIALOG, undefined>\n  | ActionType<typeof Actions.CLEAR_FILTERS, undefined>\n;\n\nexport function toggleFilter() {\n\treturn {type: Actions.TOGGLE_FILTER}\n}\n\nexport function toggleDialog() {\n\treturn {type: Actions.TOGGLE_DIALOG}\n}\n\nexport function clearFilters() {\n\treturn {type: Actions.CLEAR_FILTERS}\n}\n\ntype dispatchCallback = (action: Action) => void;\n\nexport function setTerm(term: string) {\n\treturn (dispatch: dispatchCallback) => {\n\t\tconst triggerSearchTimeout = setTimeout(() => {\n\t\t\tdispatch({type: Actions.TRIGGER_SEARCH, payload: undefined});\n\t\t}, 500)\n\n\t\tdispatch({\n\t\t\ttype: Actions.SET_TERM,\n\t\t\tpayload:{\n\t\t\t\tterm,\n\t\t\t\ttriggerSearchTimeout\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function setCategoryFilter(categoryFilters: CategoryFilterType[]) {\n\treturn {type: Actions.SET_CATEGORY_FILTER, payload: {categoryFilters}}\n}\n","import { makeStyles, FormControl, InputLabel, Select, Input, MenuItem, Checkbox, ListItemText} from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../../actions\";\nimport * as ReduxActions from \"../../actions/filter\";\nimport { RootState } from \"../../reducers\";\nimport { CategoryFilterType } from \"../../reducers/filters\";\nimport classnames from \"classnames\";\n\ninterface Props {\n\tclassName?: string\n}\n\n\nconst categories: {[key in CategoryFilterType]: string} = {\n\tcore: 'Core',\n\tsupported: 'Supported',\n\tunsupported: 'Unsupported',\n\tnonmodule: 'Non-module'\n}\nexport function CategoryFilter({className}: Props) {\n\tconst {setCategoryFilter} = useActions(ReduxActions);\n\tconst {categoryFilters} = useSelector((state: RootState) => state.filters);\n  const classes = useStyles();\n\n  if (!categoryFilters) {\n    return null;\n  }\n\n  return (\n\t\t<FormControl className={classnames(className, classes.root)}>\n        <InputLabel id=\"demo-mutiple-checkbox-label\" color=\"secondary\">Category</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-checkbox-label\"\n          id=\"demo-mutiple-checkbox\"\n          multiple\n          value={categoryFilters}\n          onChange={(event) => setCategoryFilter(event.target.value)}\n          input={<Input />}\n          renderValue={(selected) => (selected as CategoryFilterType[]).map(key => categories[key]).join(', ')}\n        >\n          {Object.keys(categories).map((key) => (\n            <MenuItem key={key} value={key}>\n              <Checkbox checked={categoryFilters.indexOf(key as CategoryFilterType) > -1} />\n              <ListItemText primary={categories[(key as CategoryFilterType)]} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n    margin: theme.spacing(1),\n    maxWidth: '100%'\n  },\n}));\n","import { TextField } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../../actions\";\nimport * as ReduxActions from \"../../actions/filter\";\nimport { RootState } from \"../../reducers\";\n\n\ninterface Props {\n\tclassName?: string\n}\n\nexport function TitleFilter({className}: Props) {\n\tconst {setTerm} = useActions(ReduxActions);\n\tconst {partialTerm} = useSelector((state: RootState) => state.filters);\n\treturn (\n\t\t<TextField\n      label=\"Filter by name\" variant=\"filled\" color=\"secondary\"\n      onChange={event => setTerm(event.target.value)} className={className} value={partialTerm}\n      style={{maxWidth: '100%'}} />\n\t);\n}\n","import { Switch, FormControlLabel } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../../actions\";\nimport * as ReduxActions from \"../../actions/filter\";\nimport { RootState } from \"../../reducers\";\n\n\ninterface Props {\n\tclassName?: string\n}\n\nexport function LatestBranchFilter({className}: Props) {\n\tconst {toggleFilter} = useActions(ReduxActions);\n\tconst {filter} = useSelector((state: RootState) => state.filters);\n\n  return (\n\t\t<FormControlLabel\n      control={<Switch checked={filter === 'latestStable'} onChange={toggleFilter} />}\n      label=\"Latest only\" color=\"secondary\" className={className}/>\n\t);\n}\n","import { makeStyles, FormGroup, Theme, Dialog, DialogTitle, DialogContent, DialogActions, Button } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { CategoryFilter } from \"./CategoryFilter\";\nimport { TitleFilter } from \"./TitleFilter\";\nimport { LatestBranchFilter } from \"./LatestBranchFilter\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../reducers\";\nimport * as ReduxActions from \"../../actions/filter\";\nimport { useActions } from \"../../actions\";\n\ninterface Props {\n\tclassName?: string\n}\n\nexport function FormDialog({className}: Props) {\n\tconst classes = useStyles();\n  const {dialogOpen} = useSelector((state: RootState) => state.filters);\n  const {toggleDialog, clearFilters} = useActions(ReduxActions);\n  return (\n\t\t<Dialog open={dialogOpen} onClose={toggleDialog} fullWidth aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Advanced Filters</DialogTitle>\n      <DialogContent>\n        <FormGroup>\n          <TitleFilter className={classes.term} />\n          <CategoryFilter className={classes.cat} />\n          <LatestBranchFilter />\n        </FormGroup>\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={toggleDialog}>\n            Done\n          </Button>\n          <Button onClick={clearFilters} color=\"primary\">\n            Clear\n          </Button>\n        </DialogActions>\n    </Dialog>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tterm: {\n\t\tflexGrow: 1,\n    [theme.breakpoints.up(\"lg\")]: {\n\t\t\tflexGrow: .7,\n\t\t},\n  },\n  cat: {\n    flexGrow: .3\n  },\n\troot: {\n\n\t}\n\n}));\n","import { makeStyles, FormGroup, useMediaQuery, Theme, IconButton } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { CategoryFilter } from \"./CategoryFilter\";\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { TitleFilter } from \"./TitleFilter\";\nimport { LatestBranchFilter } from \"./LatestBranchFilter\";\nimport { FormDialog } from \"./FormDialog\";\nimport * as ReduxActions from \"../../actions/filter\";\nimport { useActions } from \"../../actions\";\n\ninterface Props {\n\tclassName?: string\n}\n\nexport function BuildForm({className}: Props) {\n\tconst classes = useStyles();\n  const {toggleDialog} = useActions(ReduxActions);\n  const useModal = useMediaQuery((theme: Theme) =>\n  theme.breakpoints.down(\"md\")\n  );\n\treturn (\n    <React.Fragment>\n      <FormGroup row className={`${className} ${classes.root}`}>\n        <TitleFilter className={classes.term} />\n        {!useModal && <CategoryFilter className={classes.cat} /> }\n        {!useModal &&  <LatestBranchFilter /> }\n        {useModal && <IconButton aria-label=\"Advanced search filter\" onClick={toggleDialog}><FilterListIcon /></IconButton> }\n      </FormGroup>\n      <FormDialog />\n    </React.Fragment>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tterm: {\n\t\tflexGrow: 1,\n    [theme.breakpoints.up(\"lg\")]: {\n\t\t\tflexGrow: .7,\n\t\t},\n  },\n  cat: {\n    flexGrow: .3,\n    width: 250\n  },\n\troot: {\n\t}\n\n}));\n","import { makeStyles, Theme, Button } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useFavourite } from \"../selectors/useFavourite\";\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\ninterface Props {\n  name: string\n}\n\nexport function Favourite({name}: Props) {\n  const classes = useStyles();\n  const {isFavourite, toggle} = useFavourite(name);\n  const Ico = isFavourite ? StarIcon : StarBorderIcon;\n\n\treturn (\n\t\t<Button className={classes.root} onClick={(event) => {event.preventDefault(); toggle();}} >\n      <Ico fontSize=\"small\"/>\n    </Button>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\tminWidth: 0\n\t},\n}));\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../reducers\";\nimport { useActions } from \"../actions\";\nimport * as ReduxActions from \"../actions/favourite\";\n\nexport function useFavourite(module: string) {\n  const favourites = useSelector((state: RootState) => state.favourites);\n  const { toggleFavourite } = useActions(ReduxActions);\n\n  return {\n    toggle: () => toggleFavourite(module),\n    isFavourite: favourites.indexOf(module) !== -1\n  }\n\n}\n","import { makeStyles, Theme, Card, CardContent, Grid, CardHeader, Avatar } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Favourite } from \"./Favourite\";\nimport classnames from \"classnames\";\nimport {data as ssData} from \"silverstripe-cms-meta\";\n\ninterface Props {\n  name: string\n  children: React.ReactNode\n  url: string\n  className?: string\n}\n\nexport function ModuleCard({name, children, url, className}: Props) {\n  const classes = useStyles();\n  const [ , org] = name.match(/(.+)\\/.+/) as string[];\n\n  const meta = ssData.find(({repo}) => repo === name);\n  const displayName = meta?.name || name;\n  const [ , subheader, title] = displayName.match(/(.+)\\/(.+)/) as string[];\n  const headerProps = {\n    avatar: <Avatar\n      src={`https://github.com/${org}.png`}\n      alt={displayName} variant=\"rounded\"\n      className={classes.avatar}>{displayName.substring(0,1).toUpperCase()}</Avatar>,\n    action: <Favourite name={name} />,\n    subheader,\n    title,\n    className: classes.header\n  };\n\treturn (\n\t\t<Grid item xs={12} sm={6} md={4} lg={3}>\n\t\t\t<a href={url} style={{textDecoration: 'none'}}>\n\t\t\t\t<Card className={classnames(classes.box, className)}>\n          <CardHeader {...headerProps}></CardHeader>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</a>\n\t\t</Grid>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  header: {\n    textAlign: 'left'\n  },\n  box: {\n\t\tborderRadius: 8,\n\t\ttextDecoration: 'none',\n\t},\n\n\ttext: {\n\t\tcolor: \"white\",\n\t},\n\n\tmodTitle: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    textAlign: 'left',\n    \"& > :first-child\": {\n      flexGrow: 1\n    }\n  },\n\n  avatar: {\n    background: 'white'\n  }\n\n}));\n","import { makeStyles, Theme } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Module } from \"../model\";\nimport { BranchBuild, buildStateColours } from './BranchBuild';\nimport { ModuleCard } from \"./ModuleCard\";\n\nexport function Build({name, branches, state}: Module) {\n  const classes = useStyles({state});\n\treturn (\n\t\t<ModuleCard name={name} url={`https://travis-ci.com/github/${name}/branches`} className={classes.box}>\n      { state !== 'passed' && <div className={classes.cardActions}>\n\t\t\t\t{Object.keys(branches).map(branch => <BranchBuild module={name} branch={branch} key={branch} build={branches[branch]} />)}\n\t\t\t\t</div>}\n    </ModuleCard>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tbox: (props: any) => ({\n\t\tbackground: props['state'] === 'passed' ? buildStateColours.passed : undefined\n\t}),\n\n\tbranchBtn: {\n\t\tmargin: '0 8px 8px 0',\n\t\tflexGrow: 1\n\t},\n\n\tcardActions: {\n\t\tflexWrap: 'wrap',\n\t\tdisplay: 'flex'\n  },\n}));\n","import { CircularProgress, Typography } from \"@material-ui/core\";\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\n\n\ninterface Props {\n  loading: boolean,\n  results: any[] | boolean,\n  children: React.ReactNode\n}\n\nfunction NoResult() {\n  return (\n    <Typography variant=\"h1\" style={{textAlign: 'center'}} >\n      <SentimentDissatisfiedIcon style={{fontSize: '6rem'}} />\n      <br />Oh no! There's no results.\n    </Typography>\n  );\n}\n\nexport function ResultLoader({loading, children, results}: Props) {\n  const classes = useStyles();\n\n  const empty = Array.isArray(results) ? results.length === 0 : !results;\n\treturn (\n    <>\n    {\n      loading || empty ?\n        <div className={classes.root}>\n          {loading ? <CircularProgress size={100} /> : <NoResult /> }\n        </div>\n        : children\n    }\n    </>\n  );\n}\n\nconst useStyles = makeStyles({\n\troot: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: \"100%\",\n\t},\n});\n","import { data as ssModuleData } from \"silverstripe-cms-meta\";\nimport { CategoryFilterType } from \"../reducers/filters\";\n\n/**\n * Determine if a module is within one of the provided category\n * @param moduleName\n * @param categoryFilters\n */\nexport function filterModuleByCategory(moduleName:string, categoryFilters: CategoryFilterType[]) {\n\tif (categoryFilters.length === 4) {\n\t\treturn true;\n\t}\n\n\tconst moduleMetaDada = ssModuleData.find((meta) => meta.repo === moduleName );\n\treturn moduleMetaDada ? (\n\t\t(categoryFilters.includes('core') && moduleMetaDada.core ) ||\n\t\t(categoryFilters.includes('supported') && moduleMetaDada.supported ) ||\n\t\t(categoryFilters.includes('unsupported') && !moduleMetaDada.supported )\n\t) : categoryFilters.includes('nonmodule');\n}\n","const removeNulls = <S>(value: S | undefined | null): value is S => value != null && value !== undefined;\n\n/**\n * Filter out branches that are not the latest. Branches that will be returned are:\n * - master/main\n * - the next minor release branch\n * - the last two patch release branches\n * @param branches\n * @param mod\n */\nexport function latestBranchFilter(branches: string[], mod: string): string[] {\n  let nextBranches: {\n\t\tnextMajor ?: string,\n\t\tnextMinor ?: string,\n\t\tnextPatch ?: string,\n\t\tpreviousPatch ?: string,\n\t} = { }\n\n\tif (branches.includes('master')) {\n\t\tnextBranches.nextMajor = 'master';\n\t} else if (branches.includes('main')) {\n\t\tnextBranches.nextMajor = 'main';\n\t}\n\n  const nextMinor = branches.filter(branch => branch.match(/^\\d+$/))\n\t\t.map(branch => parseInt(branch))\n    .reduce((a,b) => Math.max(a,b), 0);\n\n\tif (nextMinor) {\n\t\tnextBranches.nextMinor = nextMinor.toString();\n\t\tconst patches = branches\n      // Only look at the branches on the same release line as the next minor\n      .filter(branch => branch.match(new RegExp(`^${nextMinor}\\\\.\\\\d+$`)))\n      // Convert the subversion to an INT and sort\n      .map(branch => branch.replace(`${nextMinor}.`, '').trim())\n\t\t\t.map(branch => parseInt(branch)).sort()\n      // Only keep the last two entries\n      .slice(-2)\n      // Reconstruct the patch release branch\n\t\t\t.map(subVersion => `${nextMinor}.${subVersion}`);\n\n\t\tif (patches.length === 2) {\n\t\t\tnextBranches.nextPatch = patches[1];\n\t\t\tnextBranches.previousPatch = patches[0];\n\t\t} else if (patches.length === 1) {\n\t\t\tnextBranches.nextPatch = patches[0];\n\t\t}\n  }\n\n  return Object.values(nextBranches).filter(removeNulls);\n\n}\n","import { BranchData, BranchList, BuildStateType, Module } from \"../model\";\nimport { CategoryFilterType, FilterType } from \"../reducers/filters\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../reducers\";\nimport { useMemo } from \"react\";\nimport { filterModuleByCategory } from \"./filterModuleByCategory\";\nimport { latestBranchFilter } from \"./latestBranchFilter\";\n\n\nconst statePriority: BuildStateType[][] = [\n\t['errored', 'failed'],\n\t['canceled'],\n\t['expired'],\n\t['running', 'created', 'started'],\n\t['passed']\n];\n\n/**\n * Sort states with the least desirable one showing up first.\n * @param a\n * @param b\n */\nfunction sortByState(a: BuildStateType, b: BuildStateType) {\n\tif (a === b) {\n\t\treturn 0;\n\t}\n\n\tfor (const stateGroups of statePriority) {\n\t\tif (stateGroups.indexOf(a) > -1) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (stateGroups.indexOf(b) > -1) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n/**\n * Sort module by build state and then by name.\n * @param a\n * @param b\n */\nfunction sortModule(a: Module, b: Module) {\n\tif (a === b) {\n\t\treturn 0;\n\t}\n\tconst stateSort = sortByState(a.state, b.state);\n\treturn stateSort !== 0 ? stateSort : a.name.localeCompare(b.name);\n}\n\n/**\n * Filter out branches that are not the latest. Branches that will be returned are:\n * - master/main\n * - the next minor release branch\n * - the last two patch release branch\n * @param branches\n * @param mod\n */\nfunction moduleBranchFilter(branches: BranchList, mod: string): BranchList {\n\tconst filteredBranches = latestBranchFilter(\n    Object.keys(branches),\n    mod\n  );\n\n\treturn filteredBranches.reduce((nextBranches, key) => {\n\t\treturn key === undefined ?\n\t\t\tnextBranches :\n\t\t\t{...nextBranches, [key]: branches[key]}\n\t}, {});\n}\n\n/**\n * Given a list of branches, find the worst \"state\". (e.g \"Running\" is worst than \"Passing\" and \"Failed\" is worst than \"running\")\n * This is use to attach a state to a given module.\n * @param accumulator\n * @param param1\n */\nfunction branchStateReduce(accumulator:BuildStateType, {state}:BranchData) {\n  return sortByState(accumulator, state) > 0 ? state : accumulator;\n}\n\nfunction postProcess(data: Module[], filter: FilterType, categoryFilters: CategoryFilterType[], term: string) {\n  return data\n\t\t.filter(({name}) => filterModuleByCategory(name, categoryFilters))\n\t\t.filter(({name}) => (name.indexOf(term) !== -1))\n\t\t.map(({branches, ...data}) => ({\n\t\t\tbranches: filter === 'latestStable' ? moduleBranchFilter(branches, data.name) : branches,\n\t\t\t...data\n\t\t}))\n\t\t.map(data => ({...data, state: Object.values(data.branches).reduce(branchStateReduce, 'passed')}))\n\t\t.sort((a, b) => sortModule(a, b));\n}\n\nexport function useBuilds() {\n  const {filters: {categoryFilters, filter, term}, builds} = useSelector((state: RootState) => state);\n\n  return {\n    ...builds,\n    modules: useMemo(\n      () => postProcess(builds.modules, filter, categoryFilters, term),\n      [builds.modules, categoryFilters, filter, term]\n    )\n  }\n\n}\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../reducers\";\n\n/**\n * Determine if the user is currently typings something in the search box\n */\nexport function useSearching() {\n  const { partialTerm, term } = useSelector(({filters: {partialTerm, term}}: RootState) => ({partialTerm, term}));\n\n  return partialTerm !== term;\n\n}\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { Build } from \"../components\";\nimport { ResultLoader } from \"../components/ResultLoader\";\nimport { useBuilds } from \"../selectors/useBuilds\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../reducers\";\nimport { useSearching } from \"../selectors/useSearching\";\n\nexport function HomePage() {\n\tconst classes = useStyles();\n  const {modules, loading} = useBuilds();\n  const isSearching = useSearching();\n  const { favourites } = useSelector(({favourites}: RootState) => ({favourites}));\n  const favModules = modules.filter(({name}) => favourites.includes(name));\n  const otherModules = modules.filter(({name}) => !favourites.includes(name));\n\n\treturn (\n  <ResultLoader loading={loading || isSearching} results={modules}>\n\t\t<div className={classes.root}>\n\n      {favModules.length > 0 && <Grid className={classes.centerContainer} container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={3}>\n\t\t\t\t{favModules.map( ({name, ...props}) => <Build key={name} name={name} {...props} />)}\n\t\t\t</Grid>}\n\n      {otherModules.length > 0 && <Grid className={classes.centerContainer} container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={3}>\n\t\t\t\t{otherModules.map( ({name, ...props}) => <Build key={name} name={name} {...props} />)}\n\t\t\t</Grid>}\n\t\t</div>\n  </ResultLoader>);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\ttextAlign: \"center\",\n\t\tpaddingTop: 20,\n\t\tpaddingLeft: 15,\n\t\tpaddingRight: 15,\n\t},\n\n\tcenterContainer: {\n    justifyContent: \"flex-start\",\n    marginBottom: 60\n\t},\n\n\tbutton: {\n\t\tmarginTop: 20,\n\t},\n});\n","import { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { Doughnut } from 'react-chartjs-2';\nimport { buildStateColours } from '../components/BranchBuild';\nimport { ResultLoader } from \"../components/ResultLoader\";\nimport { BuildStateType } from \"../model\";\nimport { useStats } from \"../selectors/useStats\";\n\nconst labels: BuildStateType[] = [\n\t'failed',\n\t'canceled',\n\t'expired',\n\t'running',\n\t'passed'\n];\n\nconst backgroundColor = labels.map(state => buildStateColours[state]);\n\nfunction buildData(stats: {[state in BuildStateType]: number}) {\n\treturn {\n\t\tlabels,\n\t\tdatasets: [{\n\t\t\tdata: labels.map(label => stats[label]),\n\t\t\tbackgroundColor\n\t\t}]\n\t};\n}\n\n\nexport function StatsPage() {\n\tconst classes = useStyles();\n  const {stats, loading} = useStats();\n\n  const results = Object.values(stats).find(count => count > 0) !== undefined;\n\n\treturn (\n\t\t<ResultLoader loading={loading} results={results}>\n      <div className={classes.root}>\n        <Doughnut data={buildData(stats)} legend={false}  />\n      </div>\n    </ResultLoader>\n\t);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\ttextAlign: \"center\",\n\t\tpaddingTop: 20,\n\t\tpaddingLeft: 15,\n\t\tpaddingRight: 15,\n\t},\n\n\tcenterContainer: {\n\t\t// flex: 1,\n\t\t// height: \"90%\",\n\t\t// display: \"flex\",\n\t\t// alignItems: \"center\",\n\t\t// justifyContent: \"center\",\n\t\t// flexDirection: \"column\",\n\t},\n\n\tbutton: {\n\t\tmarginTop: 20,\n\t},\n});\n","import { useBuilds } from \"./useBuilds\";\n\nexport function useStats() {\n  const {loading, modules} = useBuilds();\n\n  const initStats = {\n\t\t'passed': 0,\n\t\t'errored': 0,\n\t\t'failed': 0,\n\t\t'running': 0,\n\t\t'expired': 0,\n\t\t'canceled': 0,\n\t\t'created': 0,\n\t\t'started': 0\n\t};\n\n\tconst stats =  modules.reduce((accumulator, module) => {\n\t\tObject.values(module.branches).forEach(branch => accumulator[branch.state]++);\n\t\treturn accumulator;\n  }, initStats);\n\n  return {stats, loading};\n}\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../reducers\";\nimport { useMemo } from \"react\";\nimport { filterModuleByCategory } from \"./filterModuleByCategory\";\nimport { Comparaison, CompareEntry, CompareState } from \"../model\";\nimport { latestBranchFilter } from \"./latestBranchFilter\";\nimport { CategoryFilterType, FilterType } from \"../reducers/filters\";\n\n/**\n * Which key to use on the comparaison as the branch name\n */\ntype BranchKey = 'head'|'base';\n\nfunction branchFilter(compares: Comparaison[], repo: string, branchKey: BranchKey): Comparaison[] {\n  const branches = latestBranchFilter(\n    compares.map((compare) => compare[branchKey]),\n    repo\n  );\n\n  return compares.filter((compare) => branches.includes(compare[branchKey]));\n}\n\nfunction sort(a: CompareEntry, b: CompareEntry) {\n  if (a.compares.length !== 0 && b.compares.length === 0) {\n    return -1;\n  }\n\n  if (a.compares.length === 0 && b.compares.length !== 0) {\n    return 1;\n  }\n\n  const aUpToDate = a.compares.find(({ahead_by}) => ahead_by > 0) === undefined;\n  const bUpToDate = b.compares.find(({ahead_by}) => ahead_by > 0) === undefined;\n\n  if (aUpToDate && !bUpToDate) {\n    return 1;\n  }\n\n  if (!aUpToDate && bUpToDate) {\n    return -1;\n  }\n\n  return a.repo.localeCompare(b.repo);\n}\n\n/**\n * Filter a comparaison list\n * @param compareList\n * @param filter\n * @param categoryFilters\n * @param term\n */\nfunction process(\n  compareList: CompareEntry[],\n  filter: FilterType,\n  categoryFilters: CategoryFilterType[],\n  term: string,\n  branchKey: BranchKey\n) {\n  return compareList\n    .filter(({repo}) => filterModuleByCategory(repo, categoryFilters))\n    .filter(({repo}) => repo.includes(term))\n    .map(({compares, repo}) => {\n      return {\n        compares: filter === 'latestStable' ? branchFilter(compares, repo, branchKey) : compares,\n        repo\n      }\n    })\n    .sort(sort);\n}\n\n/**\n * Fetch and filter some comparaison data from the redux store\n * @param compareKey\n */\nexport function useCompares(compareKey: keyof RootState) {\n  const state = useSelector((state: RootState) => state);\n  const {filters: {categoryFilters, filter, term}} = state;\n  const {loading, compares} = state[compareKey] as CompareState;\n\n  // The main branch for merge up is on base, while it's on head for unrelease\n  const branchKey = compareKey === 'mergeups' ? 'base' : 'head';\n\n  return {\n    loading,\n    compares: useMemo(\n      () => process(compares, filter, categoryFilters, term, branchKey),\n      [compares, categoryFilters, filter, term, branchKey]\n    )\n  };\n\n}\n","import { makeStyles, Button } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Comparaison } from \"../model\";\nimport { buildStateColours } from \"./BranchBuild\";\nimport classnames from \"classnames\";\n\ninterface Props extends Comparaison {\n\trepo: string\n}\n\nexport function MergeupBranch({repo, head, base, ahead_by}: Props) {\n\n  const classes = useStyles();\n  const upToDate = ahead_by === 0;\n  const status = upToDate ? 'up-to-date' : `ahead by ${ahead_by} commit${ahead_by > 1 ? 's' : ''}`;\n\n\treturn (\n    <Button\n\t\t  href={`https://github.com/${repo}/compare/${base}...${head}`}\n      className={classnames(classes.root, {[classes.expired]: !upToDate})}\n      variant={upToDate ? \"outlined\" : undefined}>\n        <span className={classes.range}>{base}...{head}</span>\n        <span>{status}</span>\n    </Button>\n  );\n}\n\nconst useStyles = makeStyles(({\n\troot: {\n    margin: '0 8px 8px 0',\n    flexGrow: 1,\n    textDecoration: 'none',\n    width: '100%'\n  },\n  expired: {\n    background: buildStateColours.expired,\n    \"&:hover\": {\n      background: buildStateColours.expired,\n    }\n  },\n  range: {\n    flexGrow: 1,\n    textAlign: 'left'\n  }\n}));\n","import { makeStyles, Theme } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { CompareEntry } from \"../model\";\nimport { MergeupBranch } from \"./MergeupBranch\";\nimport { ModuleCard } from \"./ModuleCard\";\n\nexport function Mergeup({repo, compares}: CompareEntry) {\n  const classes = useStyles({});\n\treturn (\n\t\t<ModuleCard name={repo} url={`https://github.com/${repo}`} className={classes.box}>\n      { <div className={classes.cardActions}>\n          {compares.map((compare) => <MergeupBranch key={`${compare.base}..${compare.head}`} repo={repo} {...compare}/>)}\n\t\t\t\t</div>}\n    </ModuleCard>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tbox: (props: any) => ({\n\n\t}),\n\n\tbranchBtn: {\n\t\tmargin: '0 8px 8px 0',\n\t\tflexGrow: 1\n\t},\n\n\tcardActions: {\n\t\tflexWrap: 'wrap',\n\t\tdisplay: 'flex'\n  },\n}));\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { ResultLoader } from \"../components/ResultLoader\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../reducers\";\nimport { useSearching } from \"../selectors/useSearching\";\nimport { useCompares } from \"../selectors/useCompares\";\nimport { useActions } from \"../actions\";\nimport { Mergeup } from \"../components/Mergeup\";\n\ninterface Props {\n  /** Which state to use when retireving comparaison data */\n  stateKey: keyof RootState\n  /** Redux action to fire once the page is access */\n  initAction: () => any\n}\n\n/**\n * This component is use for both the unrelease and mergeup tab, because their underlying data structure is the same\n */\nexport function ComparePage({stateKey, initAction}: Props) {\n  const { initData } = useActions({initData: initAction});\n  React.useEffect( initData, [] );\n\tconst classes = useStyles();\n  const isSearching = useSearching();\n  const {loading, compares} = useCompares(stateKey);\n  const { favourites } = useSelector(({favourites}: RootState) => ({favourites}));\n  const favModules = compares.filter(({repo}) => favourites.includes(repo));\n  const otherModules = compares.filter(({repo}) => !favourites.includes(repo));\n\n\treturn (\n  <ResultLoader loading={loading || isSearching} results={compares}>\n\t\t<div className={classes.root}>\n\n      {favModules.length > 0 && <Grid className={classes.centerContainer} container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={3}>\n\t\t\t\t{favModules.map( ({repo, ...props}) => <Mergeup key={repo} repo={repo} {...props} />)}\n\t\t\t</Grid>}\n\n      {otherModules.length > 0 && <Grid className={classes.centerContainer} container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={3}>\n\t\t\t\t{otherModules.map( ({repo, ...props}) => <Mergeup key={repo} repo={repo} {...props} />)}\n\t\t\t</Grid>}\n\t\t</div>\n  </ResultLoader>);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\ttextAlign: \"center\",\n\t\tpaddingTop: 20,\n\t\tpaddingLeft: 15,\n\t\tpaddingRight: 15,\n\t},\n\n\tcenterContainer: {\n    justifyContent: \"flex-start\",\n    marginBottom: 60\n\t},\n\n\tbutton: {\n\t\tmarginTop: 20,\n\t},\n});\n","import { genericHttpAction, CompareDataPayload, ActionType } from \"./genericHttpAction\";\n\nexport enum MergeupActions {\n  LOADING = \"LOADING_MERGEUP\",\n  LOADED = \"MERGEUP_LOADED\"\n}\n\nexport type MergeupAction =\n  | ActionType<typeof MergeupActions.LOADING, void>\n  | ActionType<typeof MergeupActions.LOADED, CompareDataPayload>\n;\n\nexport const initMergeupData = genericHttpAction(\n  'mergeup',\n  MergeupActions.LOADING,\n  MergeupActions.LOADED\n);\n","import { genericHttpAction, CompareDataPayload, ActionType } from \"./genericHttpAction\";\n\nexport enum UnreleaseActions {\n  LOADING = \"LOADING_UNRELEASE\",\n  LOADED = \"UNRELEASE_LOADED\"\n}\n\nexport type UnreleaseAction =\n  | ActionType<typeof UnreleaseActions.LOADING, void>\n  | ActionType<typeof UnreleaseActions.LOADED, CompareDataPayload>\n;\n\nexport const initUnreleaseData = genericHttpAction(\n  'unrelease',\n  UnreleaseActions.LOADING,\n  UnreleaseActions.LOADED\n);\n","// prettier-ignore\nimport { Theme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { HomePage, StatsPage } from \"./pages\";\nimport { ComparePage } from \"./pages/ComparePage\";\nimport { initMergeupData } from \"./actions/mergeups\";\nimport { initUnreleaseData } from \"./actions/unrelease\";\n\nexport function Routes() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t\t<Route path=\"/home\" component={HomePage} />\n        <Route path=\"/mergeups\">\n          <ComparePage stateKey=\"mergeups\" initAction={initMergeupData} />\n        </Route>\n        <Route path=\"/unreleases\">\n          <ComparePage stateKey=\"unreleases\" initAction={initUnreleaseData} />\n        </Route>\n\t\t\t\t<Route path=\"/stats\" component={StatsPage} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\tbackgroundColor: theme.palette.background.default,\n\t\toverflow: 'auto',\n\t\twidth: \"100%\",\n\t\theight: \"calc(100% - 56px)\",\n\t\tmarginTop: 56,\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\theight: \"calc(100% - 64px)\",\n\t\t\tmarginTop: 64,\n\t\t},\n\t},\n}));\n","// prettier-ignore\nimport { AppBar, IconButton, Toolbar, useMediaQuery, Drawer as DrawerMui } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { withRoot } from \"./withRoot\";\nimport { useActions } from \"./actions\";\nimport * as BuildActions from \"./actions/build\";\nimport * as FavActions from \"./actions/favourite\";\nimport { Drawer } from './components/Drawer';\nimport { BuildForm} from \"./components/Form/BuildForm\";\n\nimport { Routes } from './Routes';\n\n\nfunction App() {\n  const buildActions = useActions(BuildActions);\n  const { initFavourite } = useActions(FavActions);\n\tReact.useEffect( () => {\n    buildActions.initBuildData();\n    initFavourite();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst classes = useStyles();\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\n\n\tconst isMobile = useMediaQuery((theme: Theme) =>\n\t\ttheme.breakpoints.down(\"sm\")\n\t);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\treturn (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.appFrame}>\n          <nav className={\"\"}>\n            <DrawerMui\n              variant={isMobile ? \"temporary\" : \"permanent\"}\n              open={!isMobile || mobileOpen}\n              onClose={() => setMobileOpen(false)}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n              {/* <Typography variant=\"h6\">Silverstripe CMS Squad Dashboard</Typography> */}\n              <Drawer />\n            </DrawerMui>\n          </nav>\n\t\t\t\t\t<AppBar className={classes.appBar} >\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\t\t\tclassName={classes.navIconHide}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<BuildForm className={classes.appForm} />\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<Routes />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tzIndex: 1,\n\t\toverflow: \"hidden\",\n\t},\n\tappFrame: {\n\t\tposition: \"relative\",\n\t\tdisplay: \"flex\",\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n    position: \"absolute\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 'calc(100% - 240px)'\n    }\n\t},\n\tappForm: {\n\t\tflexGrow: 1\n\t},\n\tnavIconHide: {\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n\tdrawerPaper: {\n\t    width: 250,\n        backgroundColor: theme.palette.background.default,\n        [theme.breakpoints.up(\"md\")]: {\n                width: drawerWidth,\n                position: \"relative\",\n                height: \"100%\",\n        },\n\t},\n}));\n\nexport default withRoot(App);\n","/**\n * Created by toni on 12.03.2017.\n */\nimport { Reducer } from \"redux\";\nimport { Action } from \"../actions\";\n\nexport default function createReducer<S>(\n\tinitialState: S,\n\thandlers: any\n): Reducer<S> {\n\tconst r = (state: S = initialState, action: Action): S => {\n\t\tif (handlers.hasOwnProperty(action.type)) {\n\t\t\treturn handlers[action.type](state, action);\n\t\t} else {\n\t\t\treturn state;\n\t\t}\n\t};\n\n\treturn r as Reducer<S>;\n}\n","import { BuildState } from \"../../model\";\n\n/**\n * Inital state of the Build State\n */\nexport const initialState: BuildState = {\n\tmodules: [],\n\tloading: true\n};\n","import { BuildAction, BuildActions, BuildDataPayload } from \"../../actions/build\";\nimport { BranchData, BuildData, BuildState} from \"../../model\";\nimport createReducer from \"../createReducer\";\nimport { initialState } from \"./initalState\";\n\n/**\n * Create an artificial state of expired for builds that haven't run in more than 30 days.\n * @param data\n */\nfunction markExpiredBuild(data: BranchData): BranchData {\n  if (!data || data.state !== 'passed') {\n\t  return data;\n  }\n\n  const buildDate = new Date(data.started_at);\n  const now = new Date();\n  const expiry = new Date();\n  expiry.setDate(now.getDate() - 30);\n\n  return (buildDate < expiry) ? {...data, state: 'expired'} : data;\n}\n\nfunction postProcess(data: BuildData) {\n\treturn Object.keys(data)\n\t\t.map(module => ({\n\t\t\tbranches: data[module],\n\t\t\tname: module,\n\t\t}))\n\t\t.map(({branches, ...data}) => {\n\t\t\tfor (const key in branches) {\n\t\t\t\tbranches[key] = markExpiredBuild(branches[key]);\n\t\t\t}\n\t\t\treturn {branches, ...data};\n\t\t})\n}\n\nexport const builds = createReducer<BuildState>(initialState, {\n\t[BuildActions.LOADING_BUILDS]() {\n\t\treturn initialState;\n\t},\n\t[BuildActions.BUILD_LOADED](state: BuildState, action: BuildAction) {\n    const {json, lastModified} = action.payload as BuildDataPayload;\n\t\treturn {\n\t\t\t...state,\n\t\t\tmodules: postProcess(json),\n\t\t\tlastModified,\n\t\t\tloading: false\n\t\t};\n\t}\n});\n","import { Action, Actions, SetCatPayload, SetTermPayload } from \"../actions/filter\";\nimport createReducer from \"./createReducer\";\n\n\nexport type FilterType = 'all'|'latestStable';\nexport type CategoryFilterType = 'core'|'supported'|'unsupported'|'nonmodule';\n\nexport interface FilterState {\n\tfilter: FilterType,\n  term: string,\n  partialTerm: string,\n\ttriggerSearchTimeout?: NodeJS.Timeout,\n  categoryFilters: CategoryFilterType[],\n  dialogOpen: boolean\n}\n\n/**\n * Inital state of the Build State\n */\nconst initialState: FilterState = {\n\tfilter: 'latestStable',\n  term: '',\n  partialTerm: '',\n  categoryFilters: ['core', 'nonmodule', 'supported', 'unsupported'],\n  dialogOpen: false\n};\n\n\nexport const filters = createReducer<FilterState>(initialState, {\n\t[Actions.TOGGLE_FILTER]({filter, ...state}: FilterState) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tfilter: filter === 'latestStable' ? 'all' : 'latestStable'\n\t\t};\n\t},\n  [Actions.TOGGLE_DIALOG]({dialogOpen, ...state}: FilterState) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tdialogOpen: !dialogOpen\n\t\t};\n\t},\n  [Actions.CLEAR_FILTERS]() {\n\t\treturn initialState;\n\t},\n\t[Actions.SET_TERM](state: FilterState, action: Action) {\n\t\tstate.triggerSearchTimeout && clearTimeout(state.triggerSearchTimeout);\n\n\t\tconst {term, triggerSearchTimeout} =  action.payload as SetTermPayload;\n\t\treturn {\n\t\t\t...state,\n\t\t\tpartialTerm: term.toLocaleLowerCase(),\n      triggerSearchTimeout,\n\t\t};\n\t},\n\t[Actions.TRIGGER_SEARCH](state: FilterState) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tterm: state.partialTerm\n\t\t};\n\t},\n\t[Actions.SET_CATEGORY_FILTER](state: FilterState, action: Action) {\n\t\tconst {categoryFilters} = action.payload as SetCatPayload;\n\t\treturn {...state, categoryFilters};\n\t}\n});\n","import { CompareDataPayload } from \"../actions/genericHttpAction\";\nimport { MergeupAction } from \"../actions/mergeups\";\nimport { CompareState} from \"../model\";\nimport createReducer from \"./createReducer\";\n\n/**\n * Inital state of the Build State\n */\nexport const initialState: CompareState = {\n\tcompares: [],\n\tloading: true\n};\n\n/**\n * Use to generate the reducer for unrelease and mergeups\n */\nexport function compareReducer(loadingAction: string, loadedAction: string) {\n  return createReducer<CompareState>(initialState, {\n    [loadingAction]() {\n      return initialState;\n    },\n    [loadedAction](state: CompareState, action: MergeupAction) {\n      const {json, lastModified} = action.payload as CompareDataPayload;\n      return {\n        ...state,\n        compares: json,\n        lastModified: lastModified,\n        loading: false\n      };\n    }\n  })\n}\n","import { MergeupActions } from \"../actions/mergeups\";\nimport { compareReducer } from \"./compare\";\n\nexport const mergeups = compareReducer(MergeupActions.LOADING, MergeupActions.LOADED);\n","import { UnreleaseActions } from \"../actions/unrelease\";\nimport { compareReducer } from \"./compare\";\n\nexport const unreleases = compareReducer(UnreleaseActions.LOADING, UnreleaseActions.LOADED);\n","import { Action, Actions } from \"../actions/favourite\";\nimport createReducer from \"./createReducer\";\n\n\nexport type FavouriteState = string[];\n\nconst initialState: FavouriteState = [];\n\n\nexport const favourites = createReducer<FavouriteState>(initialState, {\n\t[Actions.INIT_FAV](state: FavouriteState, action: Action) {\n    return action.payload || [];\n\t},\n});\n","import { createBrowserHistory } from \"history\";\nimport * as localforage from \"localforage\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport { PersistConfig, persistReducer, persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig: PersistConfig<any> = {\n\tkey: \"root\",\n\tversion: 1,\n\tstorage: localforage,\n\tblacklist: [],\n};\n\nconst logger = (createLogger as any)();\nconst history = createBrowserHistory();\n\nconst dev = process.env.NODE_ENV === \"development\";\n\nlet middleware = dev ? applyMiddleware(thunk, logger) : applyMiddleware(thunk);\n\nif (dev) {\n\tmiddleware = composeWithDevTools(middleware);\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nexport default () => {\n\tconst store = createStore(persistedReducer, {}, middleware) as any;\n\tconst persistor = persistStore(store);\n\treturn { store, persistor };\n};\n\nexport { history };\n","import { History } from \"history\";\nimport { combineReducers } from \"redux\";\nimport { BuildState, CompareState } from \"../model\";\nimport { builds } from \"./Build/reducer\";\nimport { filters, FilterState } from \"./filters\";\nimport { mergeups } from \"./mergeups\";\nimport { unreleases } from \"./unreleases\";\nimport { favourites, FavouriteState } from \"./favourites\";\n\nexport interface RootState {\n  builds: BuildState\n  filters: FilterState\n  favourites: FavouriteState,\n  mergeups: CompareState,\n  unreleases: CompareState,\n}\n\nexport default (history: History) =>\n\tcombineReducers({\n    builds,\n    filters,\n    favourites,\n    mergeups,\n    unreleases\n\t});\n","import { Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport configureStore from \"./configureStore\";\n\nconst { persistor, store } = configureStore();\n\nexport function ReduxRoot() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<PersistGate\n\t\t\t\tloading={<Typography>Loading...</Typography>}\n\t\t\t\tpersistor={persistor}\n\t\t\t>\n\t\t\t\t<App />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { ReduxRoot } from \"./ReduxRoot\";\n\nconst rootEl = document.getElementById(\"root\");\nReactDOM.render(<ReduxRoot />, rootEl);\n\n// comment in for PWA with service worker in production mode\n// registerServiceWorker();\n"],"sourceRoot":""}